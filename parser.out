Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    EM
    FAZER
    INSTRUCAO
    PARA
    PARAFIM

Grammar

Rule 0     S' -> initial
Rule 1     initial -> comando
Rule 2     initial -> assign
Rule 3     initial -> declare_var
Rule 4     comando -> ESCREVE lista_strings FIM
Rule 5     lista_strings -> lista_strings SEPARADOR E
Rule 6     lista_strings -> lista_strings SEPARADOR NUM
Rule 7     lista_strings -> lista_strings SEPARADOR STRING
Rule 8     E -> E + E
Rule 9     E -> E - E
Rule 10    E -> E * E
Rule 11    lista_strings -> STRING
Rule 12    lista_strings -> NUM
Rule 13    lista_strings -> E
Rule 14    E -> - E
Rule 15    E -> ( E )
Rule 16    E -> NUM
Rule 17    E -> VARID
Rule 18    declare_var -> VAR VARID FIM
Rule 19    assign -> VAR VARID = E FIM

Terminals, with rules where they appear

(                    : 15
)                    : 15
*                    : 10
+                    : 8
-                    : 9 14
=                    : 19
EM                   : 
ESCREVE              : 4
FAZER                : 
FIM                  : 4 18 19
INSTRUCAO            : 
NUM                  : 6 12 16
PARA                 : 
PARAFIM              : 
SEPARADOR            : 5 6 7
STRING               : 7 11
VAR                  : 18 19
VARID                : 17 18 19
error                : 

Nonterminals, with rules where they appear

E                    : 5 8 8 9 9 10 10 13 14 15 19
assign               : 2
comando              : 1
declare_var          : 3
initial              : 0
lista_strings        : 4 5 6 7

Parsing method: LALR

state 0

    (0) S' -> . initial
    (1) initial -> . comando
    (2) initial -> . assign
    (3) initial -> . declare_var
    (4) comando -> . ESCREVE lista_strings FIM
    (19) assign -> . VAR VARID = E FIM
    (18) declare_var -> . VAR VARID FIM

    ESCREVE         shift and go to state 5
    VAR             shift and go to state 6

    initial                        shift and go to state 1
    comando                        shift and go to state 2
    assign                         shift and go to state 3
    declare_var                    shift and go to state 4

state 1

    (0) S' -> initial .



state 2

    (1) initial -> comando .

    $end            reduce using rule 1 (initial -> comando .)


state 3

    (2) initial -> assign .

    $end            reduce using rule 2 (initial -> assign .)


state 4

    (3) initial -> declare_var .

    $end            reduce using rule 3 (initial -> declare_var .)


state 5

    (4) comando -> ESCREVE . lista_strings FIM
    (5) lista_strings -> . lista_strings SEPARADOR E
    (6) lista_strings -> . lista_strings SEPARADOR NUM
    (7) lista_strings -> . lista_strings SEPARADOR STRING
    (11) lista_strings -> . STRING
    (12) lista_strings -> . NUM
    (13) lista_strings -> . E
    (8) E -> . E + E
    (9) E -> . E - E
    (10) E -> . E * E
    (14) E -> . - E
    (15) E -> . ( E )
    (16) E -> . NUM
    (17) E -> . VARID

    STRING          shift and go to state 10
    NUM             shift and go to state 9
    -               shift and go to state 11
    (               shift and go to state 12
    VARID           shift and go to state 13

    lista_strings                  shift and go to state 7
    E                              shift and go to state 8

state 6

    (19) assign -> VAR . VARID = E FIM
    (18) declare_var -> VAR . VARID FIM

    VARID           shift and go to state 14


state 7

    (4) comando -> ESCREVE lista_strings . FIM
    (5) lista_strings -> lista_strings . SEPARADOR E
    (6) lista_strings -> lista_strings . SEPARADOR NUM
    (7) lista_strings -> lista_strings . SEPARADOR STRING

    FIM             shift and go to state 15
    SEPARADOR       shift and go to state 16


state 8

    (13) lista_strings -> E .
    (8) E -> E . + E
    (9) E -> E . - E
    (10) E -> E . * E

    FIM             reduce using rule 13 (lista_strings -> E .)
    SEPARADOR       reduce using rule 13 (lista_strings -> E .)
    +               shift and go to state 17
    -               shift and go to state 18
    *               shift and go to state 19


state 9

    (12) lista_strings -> NUM .
    (16) E -> NUM .

  ! reduce/reduce conflict for FIM resolved using rule 12 (lista_strings -> NUM .)
  ! reduce/reduce conflict for SEPARADOR resolved using rule 12 (lista_strings -> NUM .)
    FIM             reduce using rule 12 (lista_strings -> NUM .)
    SEPARADOR       reduce using rule 12 (lista_strings -> NUM .)
    +               reduce using rule 16 (E -> NUM .)
    -               reduce using rule 16 (E -> NUM .)
    *               reduce using rule 16 (E -> NUM .)

  ! FIM             [ reduce using rule 16 (E -> NUM .) ]
  ! SEPARADOR       [ reduce using rule 16 (E -> NUM .) ]


state 10

    (11) lista_strings -> STRING .

    FIM             reduce using rule 11 (lista_strings -> STRING .)
    SEPARADOR       reduce using rule 11 (lista_strings -> STRING .)


state 11

    (14) E -> - . E
    (8) E -> . E + E
    (9) E -> . E - E
    (10) E -> . E * E
    (14) E -> . - E
    (15) E -> . ( E )
    (16) E -> . NUM
    (17) E -> . VARID

    -               shift and go to state 11
    (               shift and go to state 12
    NUM             shift and go to state 21
    VARID           shift and go to state 13

    E                              shift and go to state 20

state 12

    (15) E -> ( . E )
    (8) E -> . E + E
    (9) E -> . E - E
    (10) E -> . E * E
    (14) E -> . - E
    (15) E -> . ( E )
    (16) E -> . NUM
    (17) E -> . VARID

    -               shift and go to state 11
    (               shift and go to state 12
    NUM             shift and go to state 21
    VARID           shift and go to state 13

    E                              shift and go to state 22

state 13

    (17) E -> VARID .

    +               reduce using rule 17 (E -> VARID .)
    -               reduce using rule 17 (E -> VARID .)
    *               reduce using rule 17 (E -> VARID .)
    FIM             reduce using rule 17 (E -> VARID .)
    SEPARADOR       reduce using rule 17 (E -> VARID .)
    )               reduce using rule 17 (E -> VARID .)


state 14

    (19) assign -> VAR VARID . = E FIM
    (18) declare_var -> VAR VARID . FIM

    =               shift and go to state 23
    FIM             shift and go to state 24


state 15

    (4) comando -> ESCREVE lista_strings FIM .

    $end            reduce using rule 4 (comando -> ESCREVE lista_strings FIM .)


state 16

    (5) lista_strings -> lista_strings SEPARADOR . E
    (6) lista_strings -> lista_strings SEPARADOR . NUM
    (7) lista_strings -> lista_strings SEPARADOR . STRING
    (8) E -> . E + E
    (9) E -> . E - E
    (10) E -> . E * E
    (14) E -> . - E
    (15) E -> . ( E )
    (16) E -> . NUM
    (17) E -> . VARID

    NUM             shift and go to state 26
    STRING          shift and go to state 27
    -               shift and go to state 11
    (               shift and go to state 12
    VARID           shift and go to state 13

    E                              shift and go to state 25

state 17

    (8) E -> E + . E
    (8) E -> . E + E
    (9) E -> . E - E
    (10) E -> . E * E
    (14) E -> . - E
    (15) E -> . ( E )
    (16) E -> . NUM
    (17) E -> . VARID

    -               shift and go to state 11
    (               shift and go to state 12
    NUM             shift and go to state 21
    VARID           shift and go to state 13

    E                              shift and go to state 28

state 18

    (9) E -> E - . E
    (8) E -> . E + E
    (9) E -> . E - E
    (10) E -> . E * E
    (14) E -> . - E
    (15) E -> . ( E )
    (16) E -> . NUM
    (17) E -> . VARID

    -               shift and go to state 11
    (               shift and go to state 12
    NUM             shift and go to state 21
    VARID           shift and go to state 13

    E                              shift and go to state 29

state 19

    (10) E -> E * . E
    (8) E -> . E + E
    (9) E -> . E - E
    (10) E -> . E * E
    (14) E -> . - E
    (15) E -> . ( E )
    (16) E -> . NUM
    (17) E -> . VARID

    -               shift and go to state 11
    (               shift and go to state 12
    NUM             shift and go to state 21
    VARID           shift and go to state 13

    E                              shift and go to state 30

state 20

    (14) E -> - E .
    (8) E -> E . + E
    (9) E -> E . - E
    (10) E -> E . * E

    +               reduce using rule 14 (E -> - E .)
    -               reduce using rule 14 (E -> - E .)
    *               reduce using rule 14 (E -> - E .)
    FIM             reduce using rule 14 (E -> - E .)
    SEPARADOR       reduce using rule 14 (E -> - E .)
    )               reduce using rule 14 (E -> - E .)

  ! +               [ shift and go to state 17 ]
  ! -               [ shift and go to state 18 ]
  ! *               [ shift and go to state 19 ]


state 21

    (16) E -> NUM .

    +               reduce using rule 16 (E -> NUM .)
    -               reduce using rule 16 (E -> NUM .)
    *               reduce using rule 16 (E -> NUM .)
    FIM             reduce using rule 16 (E -> NUM .)
    SEPARADOR       reduce using rule 16 (E -> NUM .)
    )               reduce using rule 16 (E -> NUM .)


state 22

    (15) E -> ( E . )
    (8) E -> E . + E
    (9) E -> E . - E
    (10) E -> E . * E

    )               shift and go to state 31
    +               shift and go to state 17
    -               shift and go to state 18
    *               shift and go to state 19


state 23

    (19) assign -> VAR VARID = . E FIM
    (8) E -> . E + E
    (9) E -> . E - E
    (10) E -> . E * E
    (14) E -> . - E
    (15) E -> . ( E )
    (16) E -> . NUM
    (17) E -> . VARID

    -               shift and go to state 11
    (               shift and go to state 12
    NUM             shift and go to state 21
    VARID           shift and go to state 13

    E                              shift and go to state 32

state 24

    (18) declare_var -> VAR VARID FIM .

    $end            reduce using rule 18 (declare_var -> VAR VARID FIM .)


state 25

    (5) lista_strings -> lista_strings SEPARADOR E .
    (8) E -> E . + E
    (9) E -> E . - E
    (10) E -> E . * E

    FIM             reduce using rule 5 (lista_strings -> lista_strings SEPARADOR E .)
    SEPARADOR       reduce using rule 5 (lista_strings -> lista_strings SEPARADOR E .)
    +               shift and go to state 17
    -               shift and go to state 18
    *               shift and go to state 19


state 26

    (6) lista_strings -> lista_strings SEPARADOR NUM .
    (16) E -> NUM .

  ! reduce/reduce conflict for FIM resolved using rule 6 (lista_strings -> lista_strings SEPARADOR NUM .)
  ! reduce/reduce conflict for SEPARADOR resolved using rule 6 (lista_strings -> lista_strings SEPARADOR NUM .)
    FIM             reduce using rule 6 (lista_strings -> lista_strings SEPARADOR NUM .)
    SEPARADOR       reduce using rule 6 (lista_strings -> lista_strings SEPARADOR NUM .)
    +               reduce using rule 16 (E -> NUM .)
    -               reduce using rule 16 (E -> NUM .)
    *               reduce using rule 16 (E -> NUM .)

  ! FIM             [ reduce using rule 16 (E -> NUM .) ]
  ! SEPARADOR       [ reduce using rule 16 (E -> NUM .) ]


state 27

    (7) lista_strings -> lista_strings SEPARADOR STRING .

    FIM             reduce using rule 7 (lista_strings -> lista_strings SEPARADOR STRING .)
    SEPARADOR       reduce using rule 7 (lista_strings -> lista_strings SEPARADOR STRING .)


state 28

    (8) E -> E + E .
    (8) E -> E . + E
    (9) E -> E . - E
    (10) E -> E . * E

    +               reduce using rule 8 (E -> E + E .)
    -               reduce using rule 8 (E -> E + E .)
    FIM             reduce using rule 8 (E -> E + E .)
    SEPARADOR       reduce using rule 8 (E -> E + E .)
    )               reduce using rule 8 (E -> E + E .)
    *               shift and go to state 19

  ! *               [ reduce using rule 8 (E -> E + E .) ]
  ! +               [ shift and go to state 17 ]
  ! -               [ shift and go to state 18 ]


state 29

    (9) E -> E - E .
    (8) E -> E . + E
    (9) E -> E . - E
    (10) E -> E . * E

    +               reduce using rule 9 (E -> E - E .)
    -               reduce using rule 9 (E -> E - E .)
    FIM             reduce using rule 9 (E -> E - E .)
    SEPARADOR       reduce using rule 9 (E -> E - E .)
    )               reduce using rule 9 (E -> E - E .)
    *               shift and go to state 19

  ! *               [ reduce using rule 9 (E -> E - E .) ]
  ! +               [ shift and go to state 17 ]
  ! -               [ shift and go to state 18 ]


state 30

    (10) E -> E * E .
    (8) E -> E . + E
    (9) E -> E . - E
    (10) E -> E . * E

    +               reduce using rule 10 (E -> E * E .)
    -               reduce using rule 10 (E -> E * E .)
    *               reduce using rule 10 (E -> E * E .)
    FIM             reduce using rule 10 (E -> E * E .)
    SEPARADOR       reduce using rule 10 (E -> E * E .)
    )               reduce using rule 10 (E -> E * E .)

  ! +               [ shift and go to state 17 ]
  ! -               [ shift and go to state 18 ]
  ! *               [ shift and go to state 19 ]


state 31

    (15) E -> ( E ) .

    +               reduce using rule 15 (E -> ( E ) .)
    -               reduce using rule 15 (E -> ( E ) .)
    *               reduce using rule 15 (E -> ( E ) .)
    FIM             reduce using rule 15 (E -> ( E ) .)
    SEPARADOR       reduce using rule 15 (E -> ( E ) .)
    )               reduce using rule 15 (E -> ( E ) .)


state 32

    (19) assign -> VAR VARID = E . FIM
    (8) E -> E . + E
    (9) E -> E . - E
    (10) E -> E . * E

    FIM             shift and go to state 33
    +               shift and go to state 17
    -               shift and go to state 18
    *               shift and go to state 19


state 33

    (19) assign -> VAR VARID = E FIM .

    $end            reduce using rule 19 (assign -> VAR VARID = E FIM .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 9 resolved using rule (lista_strings -> NUM)
WARNING: rejected rule (E -> NUM) in state 9
WARNING: reduce/reduce conflict in state 26 resolved using rule (lista_strings -> lista_strings SEPARADOR NUM)
WARNING: rejected rule (E -> NUM) in state 26
